{"version":3,"sources":["../../src/pages/reset-password/reset-password.module.ts","webpack:///./src/validators/email.ts?fb79","../../src/pages/reset-password/reset-password.ts"],"names":[],"mappings":"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","file":"1.main.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ResetPasswordPage } from './reset-password';\n\n@NgModule({\n  declarations: [\n    ResetPasswordPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ResetPasswordPage),\n  ],\n  exports: [\n    ResetPasswordPage\n  ]\n})\nexport class ResetPasswordPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/reset-password/reset-password.module.ts","import { FormControl } from '@angular/forms';\n\nexport class EmailValidator {\n\n  static isValid(control: FormControl){\n    const re = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/.test(control.value);\n\n    if (re){ return null; }\n    return { \"invalidEmail\": true };\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/validators/email.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, AlertController, NavParams } from 'ionic-angular';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { AuthProvider } from '../../providers/auth/auth';\nimport { EmailValidator } from '../../validators/email';\n\n/**\n * Generated class for the ResetPasswordPage page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n@IonicPage({\n  name:'reset-password'\n})\n@Component({\n  selector: 'page-reset-password',\n  templateUrl: 'reset-password.html',\n})\nexport class ResetPasswordPage {\n  public resetPasswordForm: FormGroup;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams,  public authProvider: AuthProvider,\n    public formBuilder: FormBuilder, public alertCtrl: AlertController) {\n        this.resetPasswordForm = formBuilder.group({\n        email: ['', Validators.compose([Validators.required, \n            EmailValidator.isValid])],\n      });\n\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad ResetPasswordPage');\n  }\n\n  resetPassword(){\n  if (!this.resetPasswordForm.valid){\n    console.log(this.resetPasswordForm.value);\n  } else {\n    this.authProvider.resetPassword(this.resetPasswordForm.value.email)\n    .then((user) => {\n      let alert = this.alertCtrl.create({\n        message: \"We just sent you a reset link to your email\",\n        buttons: [\n          {\n            text: \"Ok\",\n            role: 'cancel',\n            handler: () => { this.navCtrl.pop(); }\n          }\n        ]\n      });\n      alert.present();\n\n    }, (error) => {\n      var errorMessage: string = error.message;\n      let errorAlert = this.alertCtrl.create({\n        message: errorMessage,\n        buttons: [{ text: \"Ok\", role: 'cancel' }]\n      });\n      errorAlert.present();\n    });\n  }\n}\n}\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/reset-password/reset-password.ts"],"sourceRoot":""}